#lang plai

#| This is just a HINT of some of the many things you can/should test
about an object implementation (And it will get you started with
examples of the format for classes.)

The test file *we* will run on your code has about 35 tests, by the
way!

|#

(require "objects.YOURNAME.rkt")

;; test suite for the objects assignment

;;
;; The Classes
;;

; parent-less class
(define CTop
  '(class Top ()
     (parent Object)
     (private (pr1 4) (pr2 6))
     (public (pub1 8) (pub2 10))
     (add-private (fun (x) (+ x pr1)))
     (add-publics (fun () (+ pub1 pub2)))
     ))
       
; no private vars, override a parent's public var
(define CMid
  '(class Middle (c1 c2)
     (parent Top)
     (private)
     (public (pub1 2) (pub3 7))
     (get-constr (fun () c2))
     (use-publics (fun () (* pub1 pub3)))
     (add-pub-parent-priv (fun () (+ pub3 pr1)))
     (get-parent-pub1 (fun () (send parent get-pub1)))
     ))
     
(define CLASSES (list  CMid CTop))

;;
;; THE TESTS  
;;

;;===== desugaring into the right types of things =======

; are objects closures?
(test (closV? (run/classes '(new Top) CLASSES)) 
      true)


;;====== tests about referencing variables ==================

; can methods reference public variables?

(test (run/classes '(send (new Middle 0 1) use-publics) CLASSES)
      (numV 14))

; can methods use getters to access parent's private variables?

(test/exn (run/classes '(send (new Middle 1 2) add-pub-parent-priv) CLASSES)
          "unbound")

;; ======= tests about sharing variables ==========

; do two objects of the same class have their own private vars?

(test (run/classes '(with ([m1 (new Middle 1 2)]
                           [m2 (new Middle 11 12)])
                          (seq (send m1 set-pub1 0)
                               (send m2 get-pub1)))
                   CLASSES)
      (numV 2))

; if we set a variable that is defined in both class and parent, is
; the parent one unchanged?

(test (run/classes '(with ([m1 (new Middle 1 2)])
                          (seq (send m1 set-pub1 25)
                               (send m1 get-parent-pub1)))
                   CLASSES)
      (numV 8))

;;==== tests about methods across inheritance ============

;;===== tests about setters =============

;; ====== tests of objects inside objects =============
